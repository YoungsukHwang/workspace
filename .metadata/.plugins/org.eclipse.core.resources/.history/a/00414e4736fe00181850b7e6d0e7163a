import java.util.ArrayList;

public class myBellman {
	
	public static void main(String[] args) {
		System.out.println("Bellman-ford input adj-matrix");
		// adjacency matrix input. (undirected)
		int[][] mat = new int[5][5];
		mat[0][0] = 0;mat[0][1] = 7;mat[0][2] = 0;mat[0][3] = 0;mat[0][4] = 2;
		mat[1][0] = 0;mat[1][1] = 0;mat[1][2] = 1;mat[1][3] = 0;mat[1][4] = 2;
		mat[2][0] = 0;mat[2][1] = 0;mat[2][2] = 0;mat[2][3] = 4;mat[2][4] = 0;
		mat[3][0] = 0;mat[3][1] = 0;mat[3][2] = 5;mat[3][3] = 0;mat[3][4] = 0;
		mat[4][0] = 0;mat[4][1] = 3;mat[4][2] = 8;mat[4][3] = 5;mat[4][4] = 0;

		for (int i = 0; i < 5; i++) {
			for (int j = 0; j < 5; j++)
				System.out.print(mat[i][j] + " ");
			System.out.println();
		}
		int sourceNode = 1;
		
		Graph graph = new Graph(mat);
		System.out.println("The Shorted Path to all nodes are");
		SSSPN(graph, sourceNode-1);
	}

	private static void SSSPN(Graph graph, int s) {
		// TODO Auto-generated method stub
		int n = graph.nodes.size();
		ArrayList<E> list1 = new ArrayList<>();
		ArrayList<E> list2 = new ArrayList<>();
		
	}

}
